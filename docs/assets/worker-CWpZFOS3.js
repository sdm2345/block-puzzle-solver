const I=["1x3:gray","1x1:gray","1x2:gray","1x5:blue","1x4:blue","2x3:red","2x4:red","3x3:white","2x2:white","3x4:yellow","2x5:yellow"];self.onmessage=t=>{const{taskId:a,data:n}=t.data,f={count:0},c=n;c.items.forEach(o=>o.item.dir=o.item.dir||"row");const e=c.items,s=P(e),h=new Set(e.map(o=>o.item.type)),i=I.filter(o=>!h.has(o)),r=new Map;I.forEach(o=>r.set(o,S(o)));const l=i.slice().sort((o,p)=>{const d=r.get(o),w=r.get(p);return w.height*w.width-d.height*d.width}),x=E(s,e,l,r,f);self.postMessage({taskId:a,action:"done",data:x})};function P(t){const a=new Array(64).fill("");return t.forEach(n=>{const{row:f,col:c}=M(n.index),e=S(n.item.type),s=n.item.dir||"row",[h,i]=s==="row"?[e.width,e.height]:[e.height,e.width];for(let r=f;r<f+i;r++)for(let l=c;l<c+h;l++){const x=r*8+l;a[x]=n.item.type}}),a}function E(t,a,n,f,c){if(n.length===0)return{items:a};let e=-1;for(let i=0;i<64;i++)if(t[i]===""){e=i;break}if(e===-1)return;const{row:s,col:h}=M(e);for(let i=0;i<n.length;i++){const r=n[i],l=f.get(r),x=["row","col"];for(const o of x){const[p,d]=o==="row"?[l.width,l.height]:[l.height,l.width];if(s+d>8||h+p>8)continue;let w=!0;for(let u=s;u<s+d;u++){for(let g=h;g<h+p;g++){const m=u*8+g;if(t[m]!==""){w=!1;break}}if(!w)break}if(w){c.count++,self.postMessage({action:"count",count:c.count});const u=[...a],g=[...t];u.push({item:{type:r,dir:o},index:e});for(let k=s;k<s+d;k++)for(let B=h;B<h+p;B++){const L=k*8+B;g[L]=r}const m=[...n];m.splice(i,1);const b=E(g,u,m,f,c);if(b)return b}}}}function M(t){return{row:Math.floor(t/8),col:t%8}}const y={};function S(t){if(y[t])return y[t];const[a,n,f]=t.split(":"),[c,e]=a.split("x").map(s=>parseInt(s));return y[t]={width:e,height:c,color:n,dir:f},y[t]}
